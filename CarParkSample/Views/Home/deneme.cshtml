@{
    Layout = null;
}
@model List<CarParkSample.Models.VM.RecordDTO>
<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>örnek app</title>
    <style>
        html, body, #viewDiv {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }
    </style>

    <link rel="stylesheet" href="https://js.arcgis.com/4.18/esri/themes/light/main.css">
    <script src="https://js.arcgis.com/4.18/"></script>

    <script>
        require([
            "esri/Map",
            "esri/views/MapView",
            "esri/layers/FeatureLayer",
            "esri/PopupTemplate"
        ], function (Map, MapView, FeatureLayer) {

                var map = new Map({
                    basemap: "topo-vector"
                });


                var view = new MapView({
                    container: "viewDiv",
                    map: map,
                    center: [28.9795, 41.015137], // longitude, latitude
                    zoom: 13
                });

                var PopupPoint = {

                    title : "Otopark Verisi",
                    content : "<ul><li>{Park ID}</li>" +
                    "<li>{Park Adi} </li>" +
                    "<li>{Lokasyon ID} </li>" +
                    "<li>{Lokasyon Kodu} </li>" +
                    "<li>{Lokasyon Adi} </li>< ul > "
                };

                fetch("/Home/RecordsDB")
                    .then((res) => res.json())
                    .then((result) => {

                        result.forEach((item) => {

                            var point = new FeatureLayer({
                                type: "point",
                                data: item,
                                longitude: item.boylam,
                                latitude: item.enlem,
                                outFields: ["Park ID", "Park Adi", "Lokasyon ID", "Lokasyon Kodu", "Lokasyon Adi"],
                                popupTemplate: PopupPoint
                            });

                            

                            map.add(point);


                            

                        })


                    })
          
              

                
          

                

        });
    </script>
</head>
<body>
    <div id="viewDiv"></div>
 @*The Modal 
<div class="modal" id="recorddetail">
    <div class="modal-dialog">
        <div class="modal-content">
 Modal Header 
<div class="modal-header">
    <h4 class="modal-title">Product Detail</h4>

    <button type="button" class="close" data-dismiss="modal">&times;</button>
</div>
 Modal body 
<div class="modal-body">
    <div>
        <label for="">ID : </label>
        <input for="" id="id" />

    </div>
    <div>
        <label for="">Park ID : </label>
        <input for="" id="park" />

    </div>
    <div>
        <label for="">Park Adı : </label>
        <label for="" id="parkadi"></label>

    </div>

    <div>
        <label for="">Lokasyon Adı : </label>
        <input for="" id="lokadi" />

    </div>

    <div>
        <label for="">Park Tipi : </label>
        <input for="" id="parktipi" />

    </div>
    <div>
        <label for="">Park Kapasitesi : </label>
        <input for="" id="kapasite" />

    </div>
    <div>
        <label for="">Çalışma Saatleri : </label>
        <input for="" id="saat" />

    </div>

    <div>
        <label for="">Bolge : </label>
        <input for="" id="bolge" />

    </div>

    <div>
        <label for="">Alt Bolge : </label>
        <input for="" id="altbolge" />

    </div>

    <div>
        <label for="">İlce : </label>
        <input for="" id="ilce" />

    </div>
    <div>
        <label for="">Adres : </label>
        <input for="" id="adres" />

    </div>
    <div>
        <label for="">Boylam : </label>
        <input for="" id="boylam" />

    </div>
    <div>
        <label for="">Enlem : </label>
        <input for="" id="enlem" />

    </div>
    <div>
        <label for="">Aylık Abonelik Ucreti : </label>
        <input for="" id="ucret" />

    </div>
    <div>
        <label for="">Ucretsiz Parklanma Suresi(dakika) : </label>
        <input for="" id="sure" />

    </div>
    <div>
        <label for="">Tarifesi : </label>
        <input for="" id="tarife" />

    </div>

</div>*@
 @*Modal footer*@ 
@*<div class="modal-footer">
                    <button type="button" id="kayit" class="btn btn-primary">Kayıt</button>

                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>

            </div>
        </div>
    </div>*@
</body>
</html>
@*<!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
        <title>jjjj</title>

        <style>
            html,
            body,
            #viewDiv {
                padding: 0;
                margin: 0;
                height: 100%;
                width: 100%;
            }

            #info {
                background-color: black;
                opacity: 0.75;
                color: orange;
                font-size: 18pt;
                padding: 8px;
                visibility: hidden;
            }
        </style>

        <link rel="stylesheet" href="https://js.arcgis.com/4.1/esri/css/main.css">
        <script src="https://js.arcgis.com/4.1/"></script>

        <script>
            require([
                "esri/Map",
                "esri/views/MapView",
                "esri/layers/FeatureLayer",
                "esri/renderers/UniqueValueRenderer",
                "esri/symbols/SimpleLineSymbol",
                "dojo/dom",
                "dojo/domReady!"
            ], function (
                Map,
                MapView,
                FeatureLayer,
                UniqueValueRenderer,
                SimpleLineSymbol,
                dom
            ) {

                    fetch("/Home/RecordsDB")
                        .then((res) => res.json())
                        .then((result) => {

                            result.forEach((item) => {

                                var layer = new FeatureLayer({
                                    point: {
                                        type: "point",
                                        longitude: item.boylam,
                                        latitude: item.enlem,
                                        id: item._id,
                                        //ilce: item.Ilce,
                                        data: item
                                    },
                                    data: result,
                                    outFields: ["*"]
                                });

                                var map = new Map({
                                    basemap: "topo-vector",
                                    layers: [layer]
                                });

                                var view = new MapView({
                                    container: "viewDiv",
                                    map: map,
                                    center: [28.9795, 41.015137],
                                    zoom: 13
                                });



                            })


                        });
                    view.ui.add("info", "top-right");

                    // Set up a click event handler and retrieve the screen point
                    view.on("click", function (evt) {
                        var screenPoint = evt.screenPoint;

                        // the hitTest() checks to see if any graphics in the view
                        // intersect the given screen point
                        view.hitTest(screenPoint)
                            .then(getGraphics);


                        function showPopup(res) {
                            var graphic = res.results[0].graphic;
                            var attributes = graphic.attributes;
                            var category = attributes.CAT;
                            var wind = attributes.WIND_KTS;
                            var name = attributes.NAME;
            })











                });

                function getGraphics(response) {
                    // the topmost graphic from the click location
                    // and display select attribute values from the
                    // graphic to the user


                    dom.byId("info").style.visibility = "visible";
                    dom.byId("name").innerHTML = name;
                    dom.byId("category").innerHTML = "Category " + category;
                    dom.byId("wind").innerHTML = wind + " kts";

                    // symbolize all line segments with the given
                    // storm name with the same symbol
                    var renderer = new UniqueValueRenderer({
                        field: "NAME",
                        defaultSymbol: layer.renderer.symbol || layer.renderer.defaultSymbol,
                        uniqueValueInfos: [{
                            value: name,
                            symbol: new SimpleLineSymbol({
                                color: "orange",
                                width: 5
                            })
                        }]
                    });
                    layer.renderer = renderer;
                }

                view.then(function () {
                    layer.then(function () {
                        // update the default renderer's
                        // symbol when the layer loads
                        var renderer = layer.renderer.clone();
                        renderer.symbol.width = 4;
                        renderer.symbol.color = [255, 255, 255, 0.4]
                        layer.renderer = renderer;
                    });
                });
            });
        </script>
    </head>

    <body>
        <div id="viewDiv"></div>
        <div id="info">
            <span id="name"></span><br>
            <span id="category"></span><br>
            <span id="wind"></span>
        </div>
    </body>

    </html>*@
@*<!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport"
              content="initial-scale=1,maximum-scale=1,user-scalable=no" />
        <title>
            PopUp deneme3
        </title>

        <style>
            html,
            body,
            #viewDiv {
                padding: 0;
                margin: 0;
                height: 100%;
                width: 100%;
            }
        </style>

        <link rel="stylesheet"
              href="https://js.arcgis.com/4.18/esri/themes/light/main.css" />
        <script src="https://js.arcgis.com/4.18/"></script>

        <script>
            require([
                "esri/Map",
                "esri/layers/FeatureLayer",
                "esri/views/MapView"

            ], function (Map, FeatureLayer, MapView) {
                // Create the map
                var map = new Map({
                    basemap: "gray-vector"
                });

                // Create the MapView
                var view = new MapView({
                    container: "viewDiv",
                    map: map,
                    center: [-73.95, 40.702],
                    zoom: 10
                });



                /*************************************************************
                 * The PopupTemplate content is the text that appears inside the
                 * popup. {fieldName} can be used to reference the value of an
                 * attribute of the selected feature. HTML elements can be used
                 * to provide structure and styles within the content. The
                 * fieldInfos property is an array of objects (each object representing
                 * a field) that is use to format number fields and customize field
                 * aliases in the popup and legend.
                 **************************************************************/

                var template = {
                    // autocasts as new PopupTemplate()
                    title: "Otopark",
                    content: [
                        {
                            // It is also possible to set the fieldInfos outside of the content
                            // directly in the popupTemplate. If no fieldInfos is specifically set
                            // in the content, it defaults to whatever may be set within the popupTemplate.
                            type: "fields",
                            fieldInfos: [
                                {
                                    fieldName: ",
                                    label: "Married %"
                                },
                                {
                                    fieldName: "B12001_calc_numMarriedE",
                                    label: "People Married",
                                    format: {
                                        digitSeparator: true,
                                        places: 0
                                    }
                                },
                                {
                                    fieldName: "B12001_calc_numNeverE",
                                    label: "People that Never Married",
                                    format: {
                                        digitSeparator: true,
                                        places: 0
                                    }
                                },
                                {
                                    fieldName: "B12001_calc_numDivorcedE",
                                    label: "People Divorced",
                                    format: {
                                        digitSeparator: true,
                                        places: 0
                                    }
                                }
                            ]
                        }
                    ]
                };

                // Reference the popupTemplate instance in the
                // popupTemplate property of FeatureLayer
                var featureLayer = new FeatureLayer({
                    url:
                        "https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/ACS_Marital_Status_Boundaries/FeatureServer/2",
                    popupTemplate: template
                });
                map.add(featureLayer);
            });
        </script>
    </head>

    <body>
        <div id="viewDiv"></div>
    </body>
    </html>*@


