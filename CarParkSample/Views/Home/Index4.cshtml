
@{
    Layout = null;
}

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>ArcGIS JavaScript Tutorials: click on the map</title>
    <style>
        html, body, #viewDiv {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }

        #instruction {
            padding: 15px;
            background: white;
            color: black;
            border: 5px solid gold;
            font-family: sans-serif;
            font-size: 1.2em;
        }
    </style>

    <link rel="stylesheet" href="https://js.arcgis.com/4.11/esri/css/main.css">
    <script src="https://js.arcgis.com/4.11/"></script>

    <script>
    require([
        "esri/tasks/Locator",
        "esri/Map",
        "esri/views/MapView",
        "esri/Graphic"
    ], function(Locator, Map, MapView, Graphic) {

      // Set up a locator task using the world geocoding service
      var locatorTask = new Locator({
        url:
          "https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer"
      });

      var map = new Map({
        basemap: "topo-vector"
      });

      var view = new MapView({
        container: "viewDiv",
        map: map,
          center: [28.9795, 41.015137],
          zoom: 13
      });

       view.ui.add("instruction", "bottom-left");

       var point = {
        type: "point",
        longitude: 110.36402943937549,
        latitude: 1.5128959885365645
      };

      var simpleMarkerSymbol = {
        type: "simple-marker",
        color: [226, 119, 40],  // orange
        outline: {
          color: [255, 255, 255], // white
          width: 1
        }
      };



             fetch("/Home/Records")
                .then((res) => res.json())
                .then((result) => {

                    result.forEach((item) => {

                        let point = {
                            type: "point",
                            longitude: item.boylam,
                            latitude:item.enlem
                        };
                        //point.push();
                        //point.push(item.enlem);

                        var pointGraphic = new Graphic({
                            geometry: point,
                            symbol: simpleMarkerSymbol
                        });

                        view.graphics.add(pointGraphic);

                    })


                })



   
        /*******************************************************************
         * This click event sets generic content on the popup not tied to
         * a layer, graphic, or popupTemplate. The location of the point is
         * used as input to a reverse geocode method and the resulting
         * address is printed to the popup content.
         *******************************************************************/
        view.popup.autoOpenEnabled = false;
        view.on("click", function(event) {
         
          var lat = Math.round(event.mapPoint.latitude * 1000) / 1000;
          var lon = Math.round(event.mapPoint.longitude * 1000) / 1000;



        });
    });
    </script>
</head>
<body>
    <div id="viewDiv"></div>
    <div id="instruction">
        Click on the map to retrieve coordinates and address
    </div>
</body>
</html>