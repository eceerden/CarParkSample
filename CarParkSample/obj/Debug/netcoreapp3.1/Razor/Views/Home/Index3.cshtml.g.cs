#pragma checksum "C:\Users\Ece\source\repos\CarParkSample\CarParkSample\Views\Home\Index3.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7a68118267aa3cadae0e1f43f24610e607e28c81"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index3), @"mvc.1.0.view", @"/Views/Home/Index3.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7a68118267aa3cadae0e1f43f24610e607e28c81", @"/Views/Home/Index3.cshtml")]
    public class Views_Home_Index3 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("claro"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Ece\source\repos\CarParkSample\CarParkSample\Views\Home\Index3.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a68118267aa3cadae0e1f43f24610e607e28c813262", async() => {
                WriteLiteral(@"
    <meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"">
    <meta name=""viewport"" content=""initial-scale=1, maximum-scale=1,user-scalable=no"">
    <!--
    ArcGIS API for JavaScript, https://js.arcgis.com
    For more information about the graphics_svg_path sample, read the original sample description at developers.arcgis.com.
    https://developers.arcgis.com/javascript/3/jssamples/graphics_svg_path.html
    -->
    <title>SimpleMarkerSymbol with SVG Path - Simplified</title>
    <link rel=""stylesheet"" href=""https://js.arcgis.com/3.35/dijit/themes/claro/claro.css"">
    <link rel=""stylesheet"" href=""https://js.arcgis.com/3.35/dojox/widget/ColorPicker/ColorPicker.css"">
    <link rel=""stylesheet"" href=""https://js.arcgis.com/3.35/esri/css/esri.css"">
    <style>
        html, body, #map {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
        }

      
    </style>
    <script src=""https://js.arcgis.com/3.35/""></script>
    ");
                WriteLiteral(@"<script>
        var map;

        require([
            ""esri/map"", ""esri/geometry/Point"",
            ""esri/symbols/SimpleMarkerSymbol"", ""esri/graphic"",
            ""dojo/_base/array"", ""dojo/dom-style"", ""dojox/widget/ColorPicker"",
            ""dojo/domReady!""
        ], function (
            Map, Point,
            SimpleMarkerSymbol, Graphic,
            arrayUtils, domStyle, ColorPicker
        ) {

            map = new Map(""map"", {
                basemap: ""topo-vector"",
                center: [28.9795, 41.015137],
                zoom: 13
            });

               
                map.on(""click"", myClickHandler);

                function myClickHandler(e) {
                    console.log(e);

                    console.log(e.mapPoint.x);
                    console.log(e.mapPoint.y);
                    e.mapPoint.spatialReference = new SpatialReference({ wkid: 5252 });  //or some other spatial reference object
                    console.log(e.mapPoint);

    ");
                WriteLiteral(@"            }

           

            map.on(""load"", mapLoaded);

                async function mapLoaded() {

                    var pointlist = [];

                    await fetch(""/Home/Records"")
                        .then((res) => res.json())
                        .then((result) => {

                            result.forEach((item) => {
                                let point = [];
                                point.push(item.boylam);
                                point.push(item.enlem);

                                pointlist.push(point);
                            })


                        })



                    var iconPath = ""M10,0.186c-3.427,0-6.204,2.778-6.204,6.204c0,5.471,6.204,6.806,6.204,13.424c0-6.618,6.204-7.953,6.204-13.424C16.204,2.964,13.427,0.186,10,0.186z M10,14.453c-0.66-1.125-1.462-2.076-2.219-2.974C6.36,9.797,5.239,8.469,5.239,6.39C5.239,3.764,7.374,1.63,10,1.63c2.625,0,4.761,2.135,4.761,4.761c0,2.078-1.121,3.407-2.541,5.089C11.46");
                WriteLiteral(@"2,12.377,10.66,13.328,10,14.453z"";
                var initColor = ""#ce641d"";
                    arrayUtils.forEach(pointlist, function (point) {
                    var graphic = new Graphic(new Point(point), createSymbol(iconPath, initColor));
                    map.graphics.add(graphic);
                });

              
            }

            function createSymbol(path, color) {
                var markerSymbol = new esri.symbol.SimpleMarkerSymbol();
                markerSymbol.setPath(path);
                markerSymbol.setColor(new dojo.Color(color));
                markerSymbol.setOutline(null);
                return markerSymbol;
            }
        });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a68118267aa3cadae0e1f43f24610e607e28c818173", async() => {
                WriteLiteral("\r\n    <div id=\"map\"></div>\r\n    <div id=\"picker1\"></div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
