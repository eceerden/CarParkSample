#pragma checksum "C:\Users\Ece\source\repos\CarParkSample\CarParkSample\Views\Home\deneme.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4a04c1cafcd1d3f25603a7020e0ba11d16782ba9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_deneme), @"mvc.1.0.view", @"/Views/Home/deneme.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4a04c1cafcd1d3f25603a7020e0ba11d16782ba9", @"/Views/Home/deneme.cshtml")]
    public class Views_Home_deneme : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<CarParkSample.Models.VM.RecordDTO>>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a04c1cafcd1d3f25603a7020e0ba11d16782ba92746", async() => {
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <meta name=""viewport""
          content=""initial-scale=1,maximum-scale=1,user-scalable=no"" />
    <title>
        PopUp deneme3
    </title>

    <style>
        html,
        body,
        #viewDiv {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }
    </style>

    <link rel=""stylesheet""
          href=""https://js.arcgis.com/4.18/esri/themes/light/main.css"" />
    <script src=""https://js.arcgis.com/4.18/""></script>

    <script>
        require([
            ""esri/Map"",
            ""esri/layers/FeatureLayer"",
            ""esri/views/MapView""
            
        ], function (Map, FeatureLayer, MapView) {
            // Create the map
            var map = new Map({
                basemap: ""gray-vector""
            });

            // Create the MapView
            var view = new MapView({
                container: ""viewDiv"",
                map: map,
                center: [");
                WriteLiteral(@"-73.95, 40.702],
                zoom: 10
            });

            

            /*************************************************************
             * The PopupTemplate content is the text that appears inside the
             * popup. {fieldName} can be used to reference the value of an
             * attribute of the selected feature. HTML elements can be used
             * to provide structure and styles within the content. The
             * fieldInfos property is an array of objects (each object representing
             * a field) that is use to format number fields and customize field
             * aliases in the popup and legend.
             **************************************************************/

            var template = {
                // autocasts as new PopupTemplate()
                title: ""{NAME} in {COUNTY}"",
                content: [
                    {
                        // It is also possible to set the fieldInfos outside of the content");
                WriteLiteral(@"
                        // directly in the popupTemplate. If no fieldInfos is specifically set
                        // in the content, it defaults to whatever may be set within the popupTemplate.
                        type: ""fields"",
                        fieldInfos: [
                            {
                                fieldName: ""B12001_calc_pctMarriedE"",
                                label: ""Married %""
                            },
                            {
                                fieldName: ""B12001_calc_numMarriedE"",
                                label: ""People Married"",
                                format: {
                                    digitSeparator: true,
                                    places: 0
                                }
                            },
                            {
                                fieldName: ""B12001_calc_numNeverE"",
                                label: ""People that Never Married"",
          ");
                WriteLiteral(@"                      format: {
                                    digitSeparator: true,
                                    places: 0
                                }
                            },
                            {
                                fieldName: ""B12001_calc_numDivorcedE"",
                                label: ""People Divorced"",
                                format: {
                                    digitSeparator: true,
                                    places: 0
                                }
                            }
                        ]
                    }
                ]
            };

            // Reference the popupTemplate instance in the
            // popupTemplate property of FeatureLayer
            var featureLayer = new FeatureLayer({
                url:
                    ""https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/ACS_Marital_Status_Boundaries/FeatureServer/2"",
                popupTemplate:");
                WriteLiteral(" template\r\n            });\r\n            map.add(featureLayer);\r\n        });\r\n    </script>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a04c1cafcd1d3f25603a7020e0ba11d16782ba98098", async() => {
                WriteLiteral("\r\n    <div id=\"viewDiv\"></div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--");
#nullable restore
#line 133 "C:\Users\Ece\source\repos\CarParkSample\CarParkSample\Views\Home\deneme.cshtml"
      
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<!DOCTYPE html>

<html>
<head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""initial-scale=1, maximum-scale=1, user-scalable=no"">
    <title>Ã¶rnek app</title>
    <style>
        html, body, #viewDiv {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }
    </style>

    <link rel=""stylesheet"" href=""https://js.arcgis.com/4.18/esri/themes/light/main.css"">
    <script src=""https://js.arcgis.com/4.18/""></script>

    <script>
        var map;


        require([
            ""esri/Map"",
            ""esri/views/MapView"",
            ""esri/layers/FeatureLayer"",
            ""esri/PopupTemplate""
        ], function (Map, MapView, FeatureLayer, PopupTemplate) {

            //popupTemplate.title = ""Otopark Verisi"",
            //    //popupTemplate.content =


            var map = new Map({
                basemap: ""topo-vector""
            });

            var view = new MapView({
                container:");
            WriteLiteral(@" ""viewDiv"",
                map: map,
                center: [28.9795, 41.015137], // longitude, latitude
                zoom: 13
            });


                fetch(""/Home/RecordsDB"")
                    .then((res) => res.json())
                    .then((result) => {

                        result.forEach((item) => {


                            var popupTrailheads = {
                                title: ""Otopark"",
                                content:
                                    ""<b>ID :</b>"" + item._id + ""<b>Park ID:</b>"" + item.parkID
                            };

                            var trailheads = new FeatureLayer({
                                url:
                                    ""https://data.ibb.gov.tr/api/3/action/datastore_search?resource_id=c3eb0d72-1ce4-4983-a3a8-6b0b4b19fcb9&limit=5"",
                                outFields: [item._id, item.parkID],
                                popupTemplate: popupTrailheads
               ");
            WriteLiteral(@"             });

                            map.add(trailheads);



                        })


                    })

                view.on(""click"", function (event) {

                    view.popup.open({
                        // Set the popup's title to the coordinates of the location
                        title: ""Reverse geocode: ["" + lon + "", "" + lat + ""]"",
                        location: event.mapPoint
                    });
                    console.log(event);
                    lat = Math.round(event.mapPoint.latitude * 1000) / 1000;
                    lon = Math.round(event.mapPoint.longitude * 1000) / 1000;

                    $('#recorddetail').modal('show');

                })

        });
    </script>
</head>
<body>
    <div id=""viewDiv""></div>-->
<!-- The Modal -->
<!--<div class=""modal"" id=""recorddetail"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">-->
<!-- Modal Header -->
<!--<div class=""modal-header"">
    <h4 cl");
            WriteLiteral(@"ass=""modal-title"">Product Detail</h4>

    <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
</div>-->
<!-- Modal body -->
<!--<div class=""modal-body"">
    <div>
        <label for="""">ID : </label>
        <input for="""" id=""id"" />

    </div>
    <div>
        <label for="""">Park ID : </label>
        <input for="""" id=""park"" />

    </div>
    <div>
        <label for="""">Park AdÄ± : </label>
        <label for="""" id=""parkadi""></label>

    </div>

    <div>
        <label for="""">Lokasyon AdÄ± : </label>
        <input for="""" id=""lokadi"" />

    </div>

    <div>
        <label for="""">Park Tipi : </label>
        <input for="""" id=""parktipi"" />

    </div>
    <div>
        <label for="""">Park Kapasitesi : </label>
        <input for="""" id=""kapasite"" />

    </div>
    <div>
        <label for="""">ÃalÄ±Åma Saatleri : </label>
        <input for="""" id=""saat"" />

    </div>

    <div>
        <label for="""">Bolge : </label>
        <input for="""" id=""b");
            WriteLiteral(@"olge"" />

    </div>

    <div>
        <label for="""">Alt Bolge : </label>
        <input for="""" id=""altbolge"" />

    </div>

    <div>
        <label for="""">Ä°lce : </label>
        <input for="""" id=""ilce"" />

    </div>
    <div>
        <label for="""">Adres : </label>
        <input for="""" id=""adres"" />

    </div>
    <div>
        <label for="""">Boylam : </label>
        <input for="""" id=""boylam"" />

    </div>
    <div>
        <label for="""">Enlem : </label>
        <input for="""" id=""enlem"" />

    </div>
    <div>
        <label for="""">AylÄ±k Abonelik Ucreti : </label>
        <input for="""" id=""ucret"" />

    </div>
    <div>
        <label for="""">Ucretsiz Parklanma Suresi(dakika) : </label>
        <input for="""" id=""sure"" />

    </div>
    <div>
        <label for="""">Tarifesi : </label>
        <input for="""" id=""tarife"" />

    </div>

</div>-->
<!-- Modal footer -->
<!--<div class=""modal-footer"">
                    <button type=""button"" id=""kayit"" class");
            WriteLiteral("=\"btn btn-primary\">KayÄ±t</button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>-->\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<CarParkSample.Models.VM.RecordDTO>> Html { get; private set; }
    }
}
#pragma warning restore 1591
