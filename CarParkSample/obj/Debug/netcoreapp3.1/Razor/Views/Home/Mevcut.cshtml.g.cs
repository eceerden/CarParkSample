#pragma checksum "C:\Users\Ece\source\repos\CarParkSample\CarParkSample\Views\Home\Mevcut.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ffc4b5879d502dd78ff6c6810afc359cefaf4009"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Mevcut), @"mvc.1.0.view", @"/Views/Home/Mevcut.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ffc4b5879d502dd78ff6c6810afc359cefaf4009", @"/Views/Home/Mevcut.cshtml")]
    public class Views_Home_Mevcut : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CarParkSample.Models.VM.RecordDTO>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Ece\source\repos\CarParkSample\CarParkSample\Views\Home\Mevcut.cshtml"
  
    ViewData["Title"] = "Mevcut";
    Layout = "~/Views/Shared/_Layout.cshtml";



#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<meta name=""viewport"" content=""initial-scale=1, maximum-scale=1, user-scalable=no"">
<title>OTOPARK KONUMLARI</title>

<link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"" integrity=""sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"" crossorigin=""anonymous"">

<script src=""https://code.jquery.com/jquery-3.5.1.min.js"" integrity=""sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="" crossorigin=""anonymous""></script>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"" integrity=""sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"" crossorigin=""anonymous""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"" integrity=""sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"" crossorigin=""anonymous""></script>
<style>
    html, body, #viewDiv {
        padding: 0;
        margin: 0;
        height: 550px;
        width: 100");
            WriteLiteral(@"%;
    }

    #instruction {
        padding: 15px;
        background: white;
        color: black;
        border: 5px solid gold;
        font-family: sans-serif;
        font-size: 1.2em;
    }

    .modal-body div {
        display: grid;
    }
</style>

<link rel=""stylesheet"" href=""https://js.arcgis.com/4.11/esri/css/main.css"">
<script src=""https://js.arcgis.com/4.11/""></script>

<script>
    require([
        ""esri/tasks/Locator"",
        ""esri/Map"",
        ""esri/views/MapView"",
        ""esri/Graphic""
    ], function (Locator, Map, MapView, Graphic) {

        // set up a locator task using the world geocoding service
        var locatortask = new Locator({
            url:
                ""https://geocode.arcgis.com/arcgis/rest/services/world/geocodeserver""
        });

        var map = new Map({
            basemap: ""topo-vector""
        });

        var view = new MapView({
            container: ""viewDiv"",
            map: map,
            center: [28.9795");
            WriteLiteral(@", 41.015137],
            zoom: 13
        });

        view.ui.add(""instruction"", ""bottom-left"");



        var simpleMarkerSymbol = {
            type: ""simple-marker"",
            color: [226, 119, 40],  // orange
            outline: {
                color: [255, 255, 255], // white
                width: 1
            }
        };

        fetch(""/Home/RecordsDB"")
            .then((res) => res.json())
            .then((result) => {

                result.forEach((item) => {

                    let point = {
                        type: ""point"",
                        longitude: item.boylam,
                        latitude: item.enlem,
                        id: item._id,
                      
                        data: item
                    };


                    var pointGraphic = new Graphic({
                        geometry: point,
                        symbol: simpleMarkerSymbol
                    });

                    view.graphics.add(");
            WriteLiteral(@"pointGraphic);

                })


            })
        /*******************************************************************
          * This click event sets generic content on the popup not tied to
          * a layer, graphic, or popupTemplate. The location of the point is
          * used as input to a reverse geocode method and the resulting
          * address is printed to the popup content.
          *******************************************************************/
        view.popup.autoOpenEnabled = false;
        var lat = 0;
        var lon = 0;


        view.on(""click"", function (event) {

            view.popup.open({
                // Set the popup's title to the coordinates of the location
                title: ""Reverse geocode: ["" + lon + "", "" + lat + ""]"",
                location: event.mapPoint
            });


            $(function () {
                // When an 'image' input element is clicked (which is what an ImageButton generates)
              ");
            WriteLiteral(@"  $(pointGraphic).click(function () {
                    // Alert it's ID
                    alert($(this).attr('id'));
                });
            });


            console.log(event);
            lat = Math.round(event.mapPoint.latitude * 1000) / 1000;
            lon = Math.round(event.mapPoint.longitude * 1000) / 1000;

            $('#recorddetail').modal('show');

        })


    })
</script>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ffc4b5879d502dd78ff6c6810afc359cefaf40097573", async() => {
                WriteLiteral(@"
    <div id=""viewDiv""></div>

    <!-- The Modal -->
    <div class=""modal"" id=""recorddetail"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">

                <!-- Modal Header -->
                <div class=""modal-header"">
                    <h4 class=""modal-title"">Otopark Noktası</h4>

                    <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
                </div>

                <!-- Modal body -->

                <div class=""modal-body"">


                    <div>
                        <label");
                BeginWriteAttribute("for", " for=\"", 5262, "\"", 5268, 0);
                EndWriteAttribute();
                WriteLiteral(">ID : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 5315, "\"", 5321, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"unique\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 5426, "\"", 5432, 0);
                EndWriteAttribute();
                WriteLiteral(">Park Adı : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 5485, "\"", 5491, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"parkadi\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 5597, "\"", 5603, 0);
                EndWriteAttribute();
                WriteLiteral(">Park ID : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 5655, "\"", 5661, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"park\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 5764, "\"", 5770, 0);
                EndWriteAttribute();
                WriteLiteral(">Lokasyon Adı : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 5827, "\"", 5833, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"lokadi\" />\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 5940, "\"", 5946, 0);
                EndWriteAttribute();
                WriteLiteral(">Park Tipi : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 6000, "\"", 6006, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"parktipi\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 6113, "\"", 6119, 0);
                EndWriteAttribute();
                WriteLiteral(">Park Kapasitesi : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 6179, "\"", 6185, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"kapasite\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 6292, "\"", 6298, 0);
                EndWriteAttribute();
                WriteLiteral(">Çalışma Saatleri : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 6359, "\"", 6365, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"saat\" />\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 6470, "\"", 6476, 0);
                EndWriteAttribute();
                WriteLiteral(">Bolge : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 6526, "\"", 6532, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"bolge\" />\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 6638, "\"", 6644, 0);
                EndWriteAttribute();
                WriteLiteral(">Alt Bolge : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 6698, "\"", 6704, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"altbolge\" />\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 6813, "\"", 6819, 0);
                EndWriteAttribute();
                WriteLiteral(">İlce : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 6868, "\"", 6874, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"ilce\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 6977, "\"", 6983, 0);
                EndWriteAttribute();
                WriteLiteral(">Adres : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 7033, "\"", 7039, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"adres\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 7143, "\"", 7149, 0);
                EndWriteAttribute();
                WriteLiteral(">Boylam : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 7200, "\"", 7206, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"boylam\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 7311, "\"", 7317, 0);
                EndWriteAttribute();
                WriteLiteral(">Enlem : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 7367, "\"", 7373, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"enlem\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 7477, "\"", 7483, 0);
                EndWriteAttribute();
                WriteLiteral(">Aylık Abonelik Ucreti : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 7549, "\"", 7555, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"ucret\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 7659, "\"", 7665, 0);
                EndWriteAttribute();
                WriteLiteral(">Ucretsiz Parklanma Suresi(dakika) : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 7743, "\"", 7749, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"sure\" />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label");
                BeginWriteAttribute("for", " for=\"", 7852, "\"", 7858, 0);
                EndWriteAttribute();
                WriteLiteral(">Tarifesi : </label>\r\n                        <input");
                BeginWriteAttribute("for", " for=\"", 7911, "\"", 7917, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""tarife"" />

                    </div>


                </div>

                <!-- Modal footer -->
                <div class=""modal-footer"">
                    <button type=""button"" id=""kayit"" class=""btn btn-primary"">Kayıt</button>
                    <button type=""button"" id=""kontrol"" class=""btn btn-secondary"">Kontrol</button>

                    <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"">Close</button>
                </div>

            </div>
        </div>
    </div>


    <div id=""instruction"">
        Click on the map to show details
    </div>

    <script>

        $(""#kayit"").click(function () {


            var record = new Object();
            record.ParkAdi = $(""#parkadi"").val();
            record.ParkID = $(""#park"").val();
            record.LokasyonAdi = $(""#lokadi"").val();
            record.ParkTipi = $(""#parktipi"").val();
            record.ParkKapasitesi = $(""#kapasite"").val();
            record.CalismaSaatleri = $(""#");
                WriteLiteral(@"saat"").val();
            record.Bolge = $(""#bolge"").val();
            record.AltBolge = $(""#altbolge"").val();
            record.Ilce = $(""#ilce"").val();
            record.Adres = $(""#adres"").val();
            record.AylikAbonelikUcreti = $(""#ucret"").val();
            record.UcretsizParklanmaSuresidakika = $(""#sure"").val();
            record.Tarifesi = $(""#tarife"").val();

            record.enlem = lat;
            record.boylam = lon;

            $.ajax({

                type: ""POST"",
                url: ""/RecordSelected/AddRecord"",
                data: record,
                success: function (msg) {
                    alert(msg);
                }
            })

        })


    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CarParkSample.Models.VM.RecordDTO> Html { get; private set; }
    }
}
#pragma warning restore 1591
